@inject SignInManager<AppUser> SignInManager
@{
    var hasExternalLogins = (await SignInManager.GetExternalAuthenticationSchemesAsync()).Any();
}

<div class="nav flex-column nav-pills" role="tablist" aria-orientation="vertical">
  <a
    asp-page="./Index"
    class="nav-link @ManageNavPages.IndexNavClass(ViewContext)"
    role="tab">@Localizer["Profile"]</a>

  <a
    asp-page="./ChangePassword"
    class="nav-link @ManageNavPages.ChangePasswordNavClass(ViewContext)"
    role="tab">@Localizer["Password"]</a>

  @if (hasExternalLogins)
  {
    <a
      asp-page="./ExternalLogins"
      class="nav-link @ManageNavPages.ExternalLoginsNavClass(ViewContext)"
      role="tab">@Localizer["External logins"]</a>
  }

  <a
    asp-page="./TwoFactorAuthentication"
    class="nav-link @ManageNavPages.TwoFactorAuthenticationNavClass(ViewContext)"
    role="tab">@Localizer["Two-factor authentication"]</a>

  <a
    asp-page="./PersonalData"
    class="nav-link @ManageNavPages.PersonalDataNavClass(ViewContext)"
    role="tab">@Localizer["Personal data"]</a>
</div>
